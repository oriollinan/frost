%%
% Sine wave animation
%%

%%
% Standard Library
%%
import "std/io.ff"
import "std/math.ff"
import "std/uni.ff"

%%
% Function to draw the sine wave
%
% This function plots a sine wave on the terminal using ASCII characters.
% The sine wave is plotted based on the sine function and its amplitude is scaled
% to fit within the screen height.
%%
draw_sine_wave: double double double -> int = amplitude frequency phase {
    SET_WIDTH: int = 80
    SET_HEIGHT: int = 20
    M_PI: double = 3,14159265359

    from 0 to SET_HEIGHT by 1 |y: int| {
        from 0 to SET_WIDTH by 1 |x: int| {
            sine_value: double = amplitude * sin(frequency * @double(x) / @double(SET_WIDTH) * 2,0 * M_PI + phase)

            scaled_y: int = SET_HEIGHT / 2 - @int(sine_value * @double(SET_HEIGHT) / (2,0 * amplitude))

            if y is scaled_y {
                printf("\x1b[%d;%dH*" y x)
            }
        }
        printf("\n" 0)
    }

    0
}

%%
% Function to clear the screen
%%
clear_screen: never -> int = {
    printf("\x1b[2J\x1b[H")
}

%%
% Main function to render the sine wave animation
%%
main: never -> int = {
    FRAME_DELAY: int = 50000
    AMPLITUDE: double = 8,0
    FREQUENCY: double = 2,0
    PHASE: double = 0,0
    M_PI: double = 3,14159265359
    D_PI: double = 2,0 * M_PI

    loop true {
        clear_screen()
        draw_sine_wave(AMPLITUDE FREQUENCY PHASE)

        PHASE = PHASE + 0,1
        if PHASE > D_PI {
            PHASE = 0,0
        }

        usleep(FRAME_DELAY)
    }

    0
}
